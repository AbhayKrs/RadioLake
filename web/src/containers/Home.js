import { useState, useEffect } from 'react';
import axios from 'axios';

import SiteLogo from '../assets/images/logo192.png';

/*Imports*/
import * as am5 from "@amcharts/amcharts5";
import * as am5map from "@amcharts/amcharts5/map";
import am5geodata_worldHigh from "@amcharts/amcharts5-geodata/worldHigh";
import countries2 from "@amcharts/amcharts5-geodata/data/countries2";
import am5themes_Animated from "@amcharts/amcharts5/themes/Animated";

import { ReactComponent as StationFinder } from '../assets/icons/station-finder.svg';
import { ReactComponent as StationFound } from '../assets/icons/station-found.svg';
import { ReactComponent as StationAudioWaiting } from '../assets/icons/station-audio-waiting.svg';

import MainLoader from '../components/MainLoader';
import Video from '../components/Video';

import { country_codes, country_cords, random_country_cords } from '../utils/country-bounding-data';

import { MdSkipNext, MdSkipPrevious } from 'react-icons/md';
import { IoStop } from 'react-icons/io5';


const Home = () => {
    const [findingStation, setFindingStation] = useState(false);
    const [stations, setStations] = useState([]);
    const [mapReady, setMapReady] = useState(false);

    const [playerWaiting, setPlayerWaiting] = useState(false);

    const [playingStation, setPlayingStation] = useState({
        active: false,
        data: {}
    });

    let timeout;
    useEffect(() => {
        if (stations.length === 0) {
            axios({
                url: "https://de1.api.radio-browser.info/json/stations",
                method: "POST",
                data: {
                    order: "votes",
                    hidebroken: true,
                    // limit: 50
                }
            })
                .then(async res => {
                    const data_urlfiltered = res.data.filter(itx => { return !itx.url.includes('m3u8') && !itx.url.includes('m3u') });
                    const filtered_data = data_urlfiltered.filter(itx => itx.country !== "" || itx.countrycode !== "UM");
                    const reduced_stationlist = filtered_data.map(item => {
                        return {
                            name: item.name,
                            country: item.country,
                            countrycode: item.countrycode,
                            geo_lat: item.geo_lat,
                            geo_long: item.geo_long,
                            stationuuid: item.stationuuid,
                        }
                    });

                    let data = [];
                    const formatted_data = reduced_stationlist.reduce((acc, obj) => {
                        const { country, ...rest } = obj;
                        if (acc[country] !== undefined) {
                            data = [...acc[country], rest]
                        } else {
                            data = [rest];
                        }
                        return { ...acc, [country]: data };
                    }, {});
                    optimizeData(formatted_data);
                })
                .catch(error => {
                    console.error("Error fetching station data:", error);
                });
        } else {
            const root = am5.Root.new("chartdiv");
            start(root);
            return () => root.dispose();
        }
    }, [stations])

    const optimizeData = (data) => {
        console.log("DATA:::", data);
        console.log('COUNTRY count::', Object.keys(data).length);
        let result = [];

        Object.keys(data).forEach((key, index) => {
            const mapped_cords = country_cords.find(itx => itx.name === data[key][0].countrycode);
            if (mapped_cords !== undefined) {
                data[key].map((st, idx) => {
                    st.geo_lat = mapped_cords["list"][idx][1];
                    st.geo_long = mapped_cords["list"][idx][0];
                    result.push(st);
                });
            }
        })
        console.log("test", result);
        setStations(result);
    }

    const exportChart = (root) => {
        if (timeout) {
            clearTimeout(timeout);
        }
        timeout = setTimeout(function () {
            root.events.off("frameended", exportChart);
            mapIsReady();
            console.log("Chart ready!");
        }, 100)
    }

    const mapIsReady = () => {
        setTimeout(() => {
            setMapReady(true);
        }, 2000)
    }

    //Create audio player container
    var audio_root = document.createElement("div");
    audio_root.setAttribute("id", "station_audio_root");

    // Manipulating with mouse code
    var isDown = false;
    var isMoving = false;
    var bulletClicked = false;

    const start = (root) => {
        // Set themes
        root.setThemes([
            am5themes_Animated.new(root)
        ]);

        var station_finder_active = false;

        // Create map
        var map = root.container.children.push(am5map.MapChart.new(root, {
            panX: "rotateX",
            panY: "rotateY",
            projection: am5map.geoOrthographic()
        }));

        root.events.on("frameended", () => exportChart(root));
        map.virtualization = true;
        map.chartContainer.get("background").events.on("click", () => map.goHome());
        map.useWebWorkers = true;

        // Add zoom control
        var zoomControl = map.set("zoomControl", am5map.ZoomControl.new(root, {}));
        var homeButton = zoomControl.children.moveValue(am5.Button.new(root, {
            fill: am5.color('#172554'),
            paddingTop: 10,
            paddingBottom: 10,
            icon: am5.Graphics.new(root, {
                svgPath: "M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8",
                fill: am5.color(0xffffff)
            })
        }), 0);
        homeButton.events.on("click", () => map.goHome());
        zoomControl.children.each((button) => {
            button.get("icon").setAll({
                fill: am5.color('#000'),
                stroke: am5.color('#000')
            });
            button.get("background").setAll({
                fill: am5.color('#fcd34d'),
                stroke: 0
            });
            button.get("background").states.create("hover", {}).setAll({
                fill: am5.color('#fff')
            });
            button.get("background").states.create("down", {}).setAll({
                fill: am5.color('#fff')
            });
        });

        // Series for Background Fill
        let backgroundSeries = map.series.push(am5map.MapPolygonSeries.new(root, {}));
        backgroundSeries.mapPolygons.template.setAll({
            fill: am5.color("#172554"),
            strokeOpacity: 0
        });
        backgroundSeries.data.push({
            geometry: am5map.getGeoRectangle(90, 180, -90, -180)
        });

        // Main polygon series for countries
        let polygonSeries = map.series.push(am5map.MapPolygonSeries.new(root, {
            geoJSON: am5geodata_worldHigh
        }));
        polygonSeries.mapPolygons.template.setAll({
            fill: am5.color("#059669"),
            stroke: root.interfaceColors.get("background"),
            // tooltipText: "{name}",
            toggleKey: "active",
            interactive: true
        });

        polygonSeries.mapPolygons.template.states.create("hover", {
            fill: am5.color("#047857")
        });
        polygonSeries.mapPolygons.template.states.create("active", {
            fill: am5.color("#047857"),
        });
        polygonSeries.calculateVisualCenter = true;

        var previousPolygon;
        polygonSeries.mapPolygons.template.on("active", function (active, target) {
            station_finder_active = false;
            if (previousPolygon && previousPolygon != target) {
                previousPolygon.set("active", false);
            }
            if (target.get("active")) {
                selectCountry(target.dataItem.get("id"));
            }
            previousPolygon = target;
        });

        // // Create polygon series for the country map
        // // https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/
        // let countrySeries = map.series.push(am5map.MapPolygonSeries.new(root, {
        //     visible: false
        // }));
        // countrySeries.mapPolygons.template.setAll({
        //     tooltipText: "{name}",
        //     interactive: true,
        //     fill: am5.color(0xaaaaaa)
        // });

        // Add button to go back to continents view
        let backContainer = map.children.push(am5.Container.new(root, {
            x: am5.p100,
            centerX: am5.p100,
            dx: -10,
            paddingTop: 5,
            paddingRight: 10,
            paddingBottom: 5,
            y: 30,
            interactiveChildren: false,
            layout: root.horizontalLayout,
            cursorOverStyle: "pointer",
            background: am5.RoundedRectangle.new(root, {
                fill: am5.color(0xffffff),
                fillOpacity: 0
            }),
            visible: false
        }));
        backContainer.events.on("click", function () {
            map.goHome();
            // polygonSeries.show();
            // countrySeries.hide();
            pointSeries.bullets.clear();
            backContainer.hide();
        });
        backContainer.children.push(am5.Label.new(root, {
            text: "Back to full view",
            centerY: am5.p50,
            fill: am5.color("#fff")
        }));
        backContainer.children.push(am5.Graphics.new(root, {
            width: 32,
            height: 32,
            centerY: am5.p50,
            fill: am5.color("#fff"),
            svgPath: "M14.178 3.936c0.072 0 0.162 0.036 0.24 0.144 -0.348 -0.498 0.39 -0.282 0.432 -0.756 0.42 -0.312 0.27 -0.516 0.39 -0.528l0.132 -0.108c-0.258 0.096 -0.348 0.114 -0.42 0.114h-0.12c-0.09 0 -0.24 0.018 -0.594 0.126 -0.81 0.06 -1.392 0.936 -1.668 0.96 -0.282 0.15 -0.27 0.18 -0.204 0.18 0.018 0 0.042 -0.006 0.066 -0.006 0.024 0 0.042 -0.006 0.06 -0.006 0.066 0 0.048 0.03 -0.336 0.21 0.09 0.024 -0.672 0.36 -0.678 0.888 -0.024 0.204 0.06 0.342 0.198 0.342 0.12 0 0.27 -0.09 0.432 -0.318 0.54 -0.624 1.68 -0.684 2.172 -1.062 -0.306 -0.024 -0.246 -0.18 -0.102 -0.18zm-2.742 0.21c-0.054 0 0.018 -0.066 0.096 -0.132a4.08 4.08 0 0 1 0.18 -0.132l-0.006 0.006c0.324 -0.126 0.126 -0.156 0.3 -0.24h-0.012c-0.036 0 0.03 -0.048 0.09 -0.102 0.06 -0.048 0.114 -0.102 0.06 -0.102a0.833 0.833 0 0 0 -0.24 0.072c0.042 -0.06 0.204 -0.102 0.432 -0.228a5.235 5.235 0 0 1 -0.618 0.174c-0.024 0 0.114 -0.048 0.528 -0.174 0.018 0 0.036 0.006 0.048 0.006 0.042 0 0.06 -0.012 0.054 -0.024 -0.006 -0.012 -0.03 -0.018 -0.072 -0.018 -0.594 0.048 -1.038 0.42 -0.906 0.468a0.646 0.646 0 0 1 0.168 -0.036c0.078 0 0.042 0.066 -0.114 0.162 0.072 0.168 -1.2 0.6 -1.344 0.756a0.326 0.326 0 0 1 0.144 -0.054c0.096 0 -0.03 0.186 -0.156 0.276 0.078 0.072 0.138 0.096 0.186 0.096 0.126 0 0.18 -0.174 0.288 -0.228 0.024 0.048 0.048 0.072 0.078 0.072 0.102 0 0.228 -0.252 0.33 -0.384 0.03 0.03 0.066 0.054 0.114 0.054 0.096 0 0.24 -0.078 0.468 -0.3l-0.096 0.012zm-1.38 1.104c-0.216 0.132 -0.33 0.186 -0.378 0.186 -0.09 0 0.03 -0.168 0.138 -0.342 0.108 -0.168 0.204 -0.336 0.066 -0.336 -0.066 0 -0.186 0.036 -0.378 0.132 -0.522 0.348 -1.404 1.308 -1.794 1.308h-0.036c0.63 -0.462 0.444 -1.368 1.326 -1.602 0.87 -0.498 1.464 -0.342 2.238 -0.912 -0.228 0.114 -0.564 0.24 -0.642 0.24 -0.048 0 0.024 -0.06 0.336 -0.21 -0.03 0.006 -0.054 0.012 -0.072 0.012 -0.21 0 1.38 -0.57 1.458 -0.582 -0.654 0.09 -1.71 0.636 -1.854 0.636 -0.018 0 -0.018 -0.006 -0.018 -0.018 0.024 -0.018 0.024 -0.03 0 -0.03 -0.078 0 -0.402 0.108 -0.732 0.216 -0.324 0.108 -0.654 0.222 -0.726 0.222 -0.024 0 -0.024 -0.012 0.012 -0.036 -2.832 1.608 -5.196 4.32 -5.934 7.536 0.306 0.702 0.096 2.04 0.6 2.43 0.576 0.486 -0.492 1.896 -0.21 2.766 0.288 1.572 1.53 2.646 1.662 4.254 0.228 1.104 1.062 2.454 1.41 3.156 0.264 0.264 0.99 1.026 1.116 1.026 0.048 0 0.018 -0.114 -0.174 -0.42 -0.12 -0.342 -0.816 -1.236 -0.48 -1.236a0.225 0.225 0 0 1 0.06 0.006c-0.414 -0.42 0.918 -0.306 -0.012 -0.876 -0.108 -0.132 -0.132 -0.174 -0.108 -0.174 0.03 0 0.114 0.048 0.21 0.096a0.839 0.839 0 0 0 0.318 0.096c0.15 0 0.252 -0.102 0.192 -0.474a0.141 0.141 0 0 0 0.066 0.012c0.156 0 0.102 -0.306 0.114 -0.612 0.012 -0.306 0.09 -0.612 0.51 -0.612 0.048 0 0.102 0.006 0.156 0.012 0.972 -0.528 0.126 -1.986 1.242 -2.52 -0.042 -1.212 -1.668 -1.272 -2.28 -1.764a0.555 0.555 0 0 1 -0.294 0.078 0.849 0.849 0 0 1 -0.288 -0.054c-0.084 -0.024 -0.162 -0.054 -0.216 -0.054 -0.012 0 -0.024 0 -0.036 0.006 1.044 -0.276 0.282 -1.728 -0.582 -1.728h-0.06c-0.066 -0.63 -0.39 -0.39 -0.426 -0.912a0.327 0.327 0 0 1 -0.162 0.042c-0.144 0 -0.276 -0.102 -0.39 -0.198 -0.114 -0.102 -0.21 -0.198 -0.294 -0.198 -0.066 0 -0.126 0.066 -0.18 0.258 0.06 -0.294 0.042 -0.39 -0.018 -0.39s-0.168 0.102 -0.288 0.204c-0.114 0.102 -0.246 0.204 -0.348 0.204h-0.03c-0.702 -0.498 0.006 -1.38 -0.366 -2.058 0.24 -0.258 0.336 -0.696 0.228 -0.696 -0.054 0 -0.162 0.108 -0.33 0.402 -0.24 -0.612 0.396 -1.998 0.936 -2.076 0.018 0 0.03 -0.006 0.048 -0.006 0.096 0 0.192 0.048 0.276 0.15 0.048 0.282 -0.072 0.876 -0.024 0.876 0.024 0 0.072 -0.12 0.192 -0.432 0.156 -0.714 1.248 -1.23 1.362 -1.668 0.006 0.006 0.006 0.006 0.012 0.006 0.126 0 0.936 -0.714 1.29 -0.792 0.138 -0.138 0.234 -0.186 0.306 -0.186 0.078 0 0.12 0.06 0.15 0.114 0.03 0.06 0.054 0.114 0.084 0.114 0.024 0 0.054 -0.036 0.108 -0.138 -0.186 -0.366 0.294 -0.714 0.162 -0.714 -0.048 0 -0.192 0.048 -0.486 0.168a0.225 0.225 0 0 1 -0.084 0.03c-0.036 0 0.108 -0.096 0.318 -0.192s0.474 -0.192 0.696 -0.192A0.42 0.42 0 0 1 9 6.888c0.93 -0.222 0.42 -0.528 0.468 -0.528h0.012c0.264 -0.156 0.186 -0.744 0.576 -1.11zM5.898 7.704c-0.012 0 0.042 -0.078 0.222 -0.3 0.372 -0.276 0.672 -0.462 0.33 -0.642 0.15 -0.066 0.294 -0.144 0.432 -0.228 -0.006 0.294 -0.252 1.008 -0.384 1.008 -0.03 0 -0.06 -0.042 -0.072 -0.132 0.078 -0.138 0.084 -0.192 0.054 -0.192 -0.048 0 -0.186 0.12 -0.318 0.246 -0.132 0.114 -0.252 0.24 -0.264 0.24zm0.342 0.162c-0.162 0 -0.132 -0.102 0.366 -0.204 0.216 -0.03 0.048 -0.018 0.306 -0.078a1.215 1.215 0 0 1 -0.672 0.282zm9.33 -0.606c0.072 -0.012 0.126 -0.012 0.168 -0.012 0.174 0 0.096 0.072 -0.006 0.144s-0.228 0.144 -0.156 0.144c0.042 0 0.156 -0.024 0.39 -0.09 1.182 -0.084 -0.462 -1.086 -0.198 -1.422L15.696 6c-0.486 0.618 0.324 0.63 -0.126 1.26zm-0.492 0.024c0.084 0 0.192 -0.096 0.306 -0.366 0.156 -0.186 0.09 -0.21 -0.078 -0.3 -0.462 0.12 -0.42 0.666 -0.228 0.666zm4.14 1.902c-0.018 0 -0.03 0.006 -0.042 0.012a0.603 0.603 0 0 0 0.144 0.024 0.258 0.258 0 0 0 -0.102 -0.036zm8.058 1.494c0.102 0.222 0.156 0.312 0.162 0.312 0.042 0 -0.756 -1.944 -1.086 -2.292 -1.722 -2.832 -4.554 -4.998 -7.782 -5.808h-0.006c-0.084 0 0.012 0.042 0.126 0.084 0.114 0.042 0.252 0.084 0.252 0.084s-0.09 -0.03 -0.366 -0.108a4.527 4.527 0 0 0 -0.936 -0.18c-0.054 0.018 1.314 0.558 2.232 0.84a4.513 4.513 0 0 0 -0.702 -0.18c-0.054 0 0 0.036 0.222 0.132 -0.27 -0.078 -0.384 -0.114 -0.396 -0.114 -0.018 0 0.36 0.126 0.714 0.252 0.36 0.126 0.702 0.252 0.606 0.252 -0.024 0 -0.09 -0.012 -0.192 -0.03 0.306 0.168 0.414 0.234 0.396 0.234 -0.03 0 -0.408 -0.18 -0.798 -0.36 -0.384 -0.18 -0.774 -0.36 -0.828 -0.36 -0.03 0 0.048 0.06 0.312 0.216 0.36 0.156 0.72 0.312 0.618 0.312a2.55 2.55 0 0 1 -0.456 -0.108c0.6 0.306 -0.426 0.186 -0.078 0.6 -0.192 -0.18 -0.27 -0.24 -0.288 -0.24s0.03 0.072 0.078 0.144 0.084 0.144 0.042 0.144h-0.012c0.42 0.456 -0.294 0.048 0.216 0.456 -0.384 -0.174 -1.038 -0.462 -0.744 -0.462 0.072 0 0.21 0.018 0.426 0.066 -0.39 -0.456 -1.494 -0.474 -1.518 -0.528 -0.276 0.018 -0.282 0.228 -0.234 0.612 -0.006 0.606 -0.6 0.618 -0.522 0.966 0 -0.006 0.006 -0.006 0.006 -0.006 0.012 0 0.018 0.12 0.054 0.246 0.042 0.12 0.114 0.246 0.27 0.246a0.602 0.602 0 0 0 0.324 -0.126c0.186 0.336 0.354 0.456 0.486 0.456 0.198 0 0.318 -0.27 0.306 -0.516 -0.216 -0.12 -0.498 -1.116 -0.186 -1.116 0.048 0 0.108 0.024 0.186 0.078 -0.486 1.194 1.92 0.396 0.558 0.942 0.306 0.402 -0.192 0.384 -0.048 0.87a2.795 2.795 0 0 1 -0.72 0.126c-0.336 0 -0.594 -0.144 -0.564 -0.648 -0.42 0.222 0.42 0.972 -0.414 0.972h-0.048c-0.402 0.738 -1.908 0.486 -0.726 1.266 0.066 0.342 -0.15 0.402 -0.426 0.402 -0.072 0 -0.15 -0.006 -0.228 -0.012 -0.078 -0.006 -0.156 -0.006 -0.228 -0.006 -0.312 0 -0.534 0.078 -0.342 0.564 -0.138 0.504 0.186 0.726 0.582 0.726 0.48 0 1.068 -0.312 1.11 -0.828 0.258 -0.39 0.588 -0.552 0.93 -0.552 0.54 0 1.11 0.408 1.482 0.912 0.03 0.048 0.054 0.066 0.066 0.066 0.03 0 0 -0.12 -0.012 -0.24 -0.012 -0.096 -0.012 -0.192 0.024 -0.222 -0.534 -0.15 -0.942 -0.798 -0.762 -0.798 0.06 0 0.186 0.072 0.39 0.264h0.03c0.336 0 0.6 0.264 0.804 0.528 0.21 0.264 0.366 0.528 0.504 0.528 0.054 0 0.108 -0.048 0.156 -0.156a1.001 1.001 0 0 1 -0.114 -0.24c-0.036 -0.126 -0.036 -0.252 0.126 -0.252a0.87 0.87 0 0 1 0.282 0.072c0.408 -0.108 -0.258 -1.17 0.282 -1.17 0.054 0 0.12 0.012 0.204 0.036 -0.006 0.186 0.078 0.252 0.156 0.252 0.156 0 0.312 -0.222 -0.066 -0.288 0.144 -0.138 0.228 -0.192 0.288 -0.192 0.21 0 0.042 0.696 0.768 0.696 0.246 0.582 -2.136 0.042 -1.374 1.158 0.174 0.126 0.39 0.15 0.6 0.15 0.066 0 0.126 0 0.186 -0.006 0.06 0 0.12 -0.006 0.174 -0.006 0.372 0 0.636 0.09 0.474 0.858a1.065 1.065 0 0 1 -0.648 0.192c-0.204 0 -0.408 -0.036 -0.606 -0.072s-0.39 -0.072 -0.564 -0.072c-0.27 0 -0.486 0.09 -0.618 0.402 -0.702 -0.288 -1.626 -0.3 -1.536 -1.17 -1.224 0.174 -2.502 0.084 -3.402 0.834 -0.054 1.098 -1.938 1.452 -1.482 2.7 -0.546 1.152 0.66 2.766 1.89 2.766 0.042 0 0.09 0 0.132 -0.006 0.672 -0.006 1.35 -0.306 1.944 -0.306 0.306 0 0.582 0.078 0.822 0.318 0.054 -0.006 0.102 -0.012 0.144 -0.012 0.918 0 -0.294 1.458 0.804 1.704 0.996 1.032 -0.612 2.094 0.174 3.084 0.084 0.774 0.468 1.422 0.468 2.178 0.102 0.012 0.198 0.018 0.3 0.018 1.266 0 2.058 -1.104 2.802 -1.938 -0.228 -1.248 1.77 -1.494 1.086 -2.892 -0.318 -1.53 1.506 -2.436 1.404 -3.966 0.018 -0.216 -0.042 -0.282 -0.132 -0.282s-0.222 0.066 -0.348 0.126a0.984 0.984 0 0 1 -0.39 0.126c-0.15 0 -0.264 -0.102 -0.276 -0.438 -0.882 -0.822 -1.284 -1.938 -2.106 -2.844 1.068 0.516 1.674 1.68 2.166 2.736a0.468 0.468 0 0 0 0.132 0.018c0.87 0 2.082 -2.082 0.762 -2.586 -0.072 0.198 -0.168 0.27 -0.282 0.27 -0.198 0 -0.426 -0.24 -0.588 -0.474 -0.162 -0.24 -0.246 -0.48 -0.156 -0.48 0.06 0 0.192 0.096 0.42 0.348 0.258 0.162 0.51 0.204 0.774 0.204 0.258 0 0.522 -0.042 0.798 -0.066 0.348 0.138 0.498 0.582 0.606 0.582 0.018 0 0.042 -0.018 0.06 -0.06 0.276 0.66 0.594 1.836 0.882 2.154 -0.15 -1.008 -0.186 -2.076 -0.444 -3.066zm-3.348 -1.386c-0.678 -0.174 -0.9 -1.014 -1.434 -1.5 -0.006 -0.132 0.192 -0.108 0.144 -0.33 0.72 0.222 0.486 0.444 0.42 0.486 0.264 0.438 1.002 0.738 0.87 1.344zM14.61 4.728c-0.654 0.192 -0.744 -0.018 -0.63 0.384 0.048 0.036 0.138 0.048 0.228 0.048 0.318 0.006 0.75 -0.18 0.402 -0.432zm9.606 16.53c0.858 -0.726 0.966 -1.59 1.008 -2.466 -0.384 0.75 -1.524 1.578 -1.008 2.466zm-3.906 -11.7c-0.006 0.006 -0.006 0.006 -0.006 0.012 0.006 0.012 0.012 0.012 0.012 0.012l-0.006 -0.024zM15.36 0C6.876 0 0 6.876 0 15.36s6.876 15.36 15.36 15.36 15.36 -6.876 15.36 -15.36S23.844 0 15.36 0zm0 29.538a14.178 14.178 0 1 1 0 -28.358 14.178 14.178 0 0 1 0 28.358z"
            // svgPath: "M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM27.436,17.39c0.001,0.002,0.004,0.002,0.005,0.004c-0.022,0.187-0.054,0.37-0.085,0.554c-0.015-0.012-0.034-0.025-0.047-0.036c-0.103-0.09-0.254-0.128-0.318-0.115c-0.157,0.032,0.229,0.305,0.267,0.342c0.009,0.009,0.031,0.03,0.062,0.058c-1.029,5.312-5.709,9.338-11.319,9.338c-4.123,0-7.736-2.18-9.776-5.441c0.123-0.016,0.24-0.016,0.28-0.076c0.051-0.077,0.102-0.241,0.178-0.331c0.077-0.089,0.165-0.229,0.127-0.292c-0.039-0.064,0.101-0.344,0.088-0.419c-0.013-0.076-0.127-0.256,0.064-0.407s0.394-0.382,0.407-0.444c0.012-0.063,0.166-0.331,0.152-0.458c-0.012-0.127-0.152-0.28-0.24-0.318c-0.09-0.037-0.28-0.05-0.356-0.151c-0.077-0.103-0.292-0.203-0.368-0.178c-0.076,0.025-0.204,0.05-0.305-0.015c-0.102-0.062-0.267-0.139-0.33-0.189c-0.065-0.05-0.229-0.088-0.305-0.088c-0.077,0-0.065-0.052-0.178,0.101c-0.114,0.153,0,0.204-0.204,0.177c-0.204-0.023,0.025-0.036,0.141-0.189c0.113-0.152-0.013-0.242-0.141-0.203c-0.126,0.038-0.038,0.115-0.241,0.153c-0.203,0.036-0.203-0.09-0.076-0.115s0.355-0.139,0.355-0.19c0-0.051-0.025-0.191-0.127-0.191s-0.077-0.126-0.229-0.291c-0.092-0.101-0.196-0.164-0.299-0.204c-0.09-0.579-0.15-1.167-0.15-1.771c0-2.844,1.039-5.446,2.751-7.458c0.024-0.02,0.048-0.034,0.069-0.036c0.084-0.009,0.31-0.025,0.51-0.059c0.202-0.034,0.418-0.161,0.489-0.153c0.069,0.008,0.241,0.008,0.186-0.042C8.417,8.2,8.339,8.082,8.223,8.082S8.215,7.896,8.246,7.896c0.03,0,0.186,0.025,0.178,0.11C8.417,8.091,8.471,8.2,8.625,8.167c0.156-0.034,0.132-0.162,0.102-0.195C8.695,7.938,8.672,7.853,8.642,7.794c-0.031-0.06-0.023-0.136,0.14-0.153C8.944,7.625,9.168,7.708,9.16,7.573s0-0.28,0.046-0.356C9.253,7.142,9.354,7.09,9.299,7.065C9.246,7.04,9.176,7.099,9.121,6.972c-0.054-0.127,0.047-0.22,0.108-0.271c0.02-0.015,0.067-0.06,0.124-0.112C11.234,5.257,13.524,4.466,16,4.466c3.213,0,6.122,1.323,8.214,3.45c-0.008,0.022-0.01,0.052-0.031,0.056c-0.077,0.013-0.166,0.063-0.179-0.051c-0.013-0.114-0.013-0.331-0.102-0.203c-0.089,0.127-0.127,0.127-0.127,0.191c0,0.063,0.076,0.127,0.051,0.241C23.8,8.264,23.8,8.341,23.84,8.341c0.036,0,0.126-0.115,0.239-0.141c0.116-0.025,0.319-0.088,0.332,0.026c0.013,0.115,0.139,0.152,0.013,0.203c-0.128,0.051-0.267,0.026-0.293-0.051c-0.025-0.077-0.114-0.077-0.203-0.013c-0.088,0.063-0.279,0.292-0.279,0.292s-0.306,0.139-0.343,0.114c-0.04-0.025,0.101-0.165,0.203-0.228c0.102-0.064,0.178-0.204,0.14-0.242c-0.038-0.038-0.088-0.279-0.063-0.343c0.025-0.063,0.139-0.152,0.013-0.216c-0.127-0.063-0.217-0.14-0.318-0.178s-0.216,0.152-0.305,0.204c-0.089,0.051-0.076,0.114-0.191,0.127c-0.114,0.013-0.189,0.165,0,0.254c0.191,0.089,0.255,0.152,0.204,0.204c-0.051,0.051-0.267-0.025-0.267-0.025s-0.165-0.076-0.268-0.076c-0.101,0-0.229-0.063-0.33-0.076c-0.102-0.013-0.306-0.013-0.355,0.038c-0.051,0.051-0.179,0.203-0.28,0.152c-0.101-0.051-0.101-0.102-0.241-0.051c-0.14,0.051-0.279-0.038-0.355,0.038c-0.077,0.076-0.013,0.076-0.255,0c-0.241-0.076-0.189,0.051-0.419,0.089s-0.368-0.038-0.432,0.038c-0.064,0.077-0.153,0.217-0.19,0.127c-0.038-0.088,0.126-0.241,0.062-0.292c-0.062-0.051-0.33-0.025-0.367,0.013c-0.039,0.038-0.014,0.178,0.011,0.229c0.026,0.05,0.064,0.254-0.011,0.216c-0.077-0.038-0.064-0.166-0.141-0.152c-0.076,0.013-0.165,0.051-0.203,0.077c-0.038,0.025-0.191,0.025-0.229,0.076c-0.037,0.051,0.014,0.191-0.051,0.203c-0.063,0.013-0.114,0.064-0.254-0.025c-0.14-0.089-0.14-0.038-0.178-0.012c-0.038,0.025-0.216,0.127-0.229,0.012c-0.013-0.114,0.025-0.152-0.089-0.229c-0.115-0.076-0.026-0.076,0.127-0.025c0.152,0.05,0.343,0.075,0.622-0.013c0.28-0.089,0.395-0.127,0.28-0.178c-0.115-0.05-0.229-0.101-0.406-0.127c-0.179-0.025-0.42-0.025-0.7-0.127c-0.279-0.102-0.343-0.14-0.457-0.165c-0.115-0.026-0.813-0.14-1.132-0.089c-0.317,0.051-1.193,0.28-1.245,0.318s-0.128,0.19-0.292,0.318c-0.165,0.127-0.47,0.419-0.712,0.47c-0.241,0.051-0.521,0.254-0.521,0.305c0,0.051,0.101,0.242,0.076,0.28c-0.025,0.038,0.05,0.229,0.191,0.28c0.139,0.05,0.381,0.038,0.393-0.039c0.014-0.076,0.204-0.241,0.217-0.127c0.013,0.115,0.14,0.292,0.114,0.368c-0.025,0.077,0,0.153,0.09,0.14c0.088-0.012,0.559-0.114,0.559-0.114s0.153-0.064,0.127-0.166c-0.026-0.101,0.166-0.241,0.203-0.279c0.038-0.038,0.178-0.191,0.014-0.241c-0.167-0.051-0.293-0.064-0.115-0.216s0.292,0,0.521-0.229c0.229-0.229-0.051-0.292,0.191-0.305c0.241-0.013,0.496-0.025,0.444,0.051c-0.05,0.076-0.342,0.242-0.508,0.318c-0.166,0.077-0.14,0.216-0.076,0.292c0.063,0.076,0.09,0.254,0.204,0.229c0.113-0.025,0.254-0.114,0.38-0.101c0.128,0.012,0.383-0.013,0.42-0.013c0.039,0,0.216,0.178,0.114,0.203c-0.101,0.025-0.229,0.013-0.445,0.025c-0.215,0.013-0.456,0.013-0.456,0.051c0,0.039,0.292,0.127,0.19,0.191c-0.102,0.063-0.203-0.013-0.331-0.026c-0.127-0.012-0.203,0.166-0.241,0.267c-0.039,0.102,0.063,0.28-0.127,0.216c-0.191-0.063-0.331-0.063-0.381-0.038c-0.051,0.025-0.203,0.076-0.331,0.114c-0.126,0.038-0.076-0.063-0.242-0.063c-0.164,0-0.164,0-0.164,0l-0.103,0.013c0,0-0.101-0.063-0.114-0.165c-0.013-0.102,0.05-0.216-0.013-0.241c-0.064-0.026-0.292,0.012-0.33,0.088c-0.038,0.076-0.077,0.216-0.026,0.28c0.052,0.063,0.204,0.19,0.064,0.152c-0.14-0.038-0.317-0.051-0.419,0.026c-0.101,0.076-0.279,0.241-0.279,0.241s-0.318,0.025-0.318,0.102c0,0.077,0,0.178-0.114,0.191c-0.115,0.013-0.268,0.05-0.42,0.076c-0.153,0.025-0.139,0.088-0.317,0.102s-0.204,0.089-0.038,0.114c0.165,0.025,0.418,0.127,0.431,0.241c0.014,0.114-0.013,0.242-0.076,0.356c-0.043,0.079-0.305,0.026-0.458,0.026c-0.152,0-0.456-0.051-0.584,0c-0.127,0.051-0.102,0.305-0.064,0.419c0.039,0.114-0.012,0.178-0.063,0.216c-0.051,0.038-0.065,0.152,0,0.204c0.063,0.051,0.114,0.165,0.166,0.178c0.051,0.013,0.215-0.038,0.279,0.025c0.064,0.064,0.127,0.216,0.165,0.178c0.039-0.038,0.089-0.203,0.153-0.166c0.064,0.039,0.216-0.012,0.331-0.025s0.177-0.14,0.292-0.204c0.114-0.063,0.05-0.063,0.013-0.14c-0.038-0.076,0.114-0.165,0.204-0.254c0.088-0.089,0.253-0.013,0.292-0.115c0.038-0.102,0.051-0.279,0.151-0.267c0.103,0.013,0.243,0.076,0.331,0.076c0.089,0,0.279-0.14,0.332-0.165c0.05-0.025,0.241-0.013,0.267,0.102c0.025,0.114,0.241,0.254,0.292,0.279c0.051,0.025,0.381,0.127,0.433,0.165c0.05,0.038,0.126,0.153,0.152,0.254c0.025,0.102,0.114,0.102,0.128,0.013c0.012-0.089-0.065-0.254,0.025-0.242c0.088,0.013,0.191-0.026,0.191-0.026s-0.243-0.165-0.331-0.203c-0.088-0.038-0.255-0.114-0.331-0.241c-0.076-0.127-0.267-0.153-0.254-0.279c0.013-0.127,0.191-0.051,0.292,0.051c0.102,0.102,0.356,0.241,0.445,0.33c0.088,0.089,0.229,0.127,0.267,0.242c0.039,0.114,0.152,0.241,0.19,0.292c0.038,0.051,0.165,0.331,0.204,0.394c0.038,0.063,0.165-0.012,0.229-0.063c0.063-0.051,0.179-0.076,0.191-0.178c0.013-0.102-0.153-0.178-0.203-0.216c-0.051-0.038,0.127-0.076,0.191-0.127c0.063-0.05,0.177-0.14,0.228-0.063c0.051,0.077,0.026,0.381,0.051,0.432c0.025,0.051,0.279,0.127,0.331,0.191c0.05,0.063,0.267,0.089,0.304,0.051c0.039-0.038,0.242,0.026,0.294,0.038c0.049,0.013,0.202-0.025,0.304-0.05c0.103-0.025,0.204-0.102,0.191,0.063c-0.013,0.165-0.051,0.419-0.179,0.546c-0.127,0.127-0.076,0.191-0.202,0.191c-0.06,0-0.113,0-0.156,0.021c-0.041-0.065-0.098-0.117-0.175-0.097c-0.152,0.038-0.344,0.038-0.47,0.19c-0.128,0.153-0.178,0.165-0.204,0.114c-0.025-0.051,0.369-0.267,0.317-0.331c-0.05-0.063-0.355-0.038-0.521-0.038c-0.166,0-0.305-0.102-0.433-0.127c-0.126-0.025-0.292,0.127-0.418,0.254c-0.128,0.127-0.216,0.038-0.331,0.038c-0.115,0-0.331-0.165-0.331-0.165s-0.216-0.089-0.305-0.089c-0.088,0-0.267-0.165-0.318-0.165c-0.05,0-0.19-0.115-0.088-0.166c0.101-0.05,0.202,0.051,0.101-0.229c-0.101-0.279-0.33-0.216-0.419-0.178c-0.088,0.039-0.724,0.025-0.775,0.025c-0.051,0-0.419,0.127-0.533,0.178c-0.116,0.051-0.318,0.115-0.369,0.14c-0.051,0.025-0.318-0.051-0.433,0.013c-0.151,0.084-0.291,0.216-0.33,0.216c-0.038,0-0.153,0.089-0.229,0.28c-0.077,0.19,0.013,0.355-0.128,0.419c-0.139,0.063-0.394,0.204-0.495,0.305c-0.102,0.101-0.229,0.458-0.355,0.623c-0.127,0.165,0,0.317,0.025,0.419c0.025,0.101,0.114,0.292-0.025,0.471c-0.14,0.178-0.127,0.266-0.191,0.279c-0.063,0.013,0.063,0.063,0.088,0.19c0.025,0.128-0.114,0.255,0.128,0.369c0.241,0.113,0.355,0.217,0.418,0.367c0.064,0.153,0.382,0.407,0.382,0.407s0.229,0.205,0.344,0.293c0.114,0.089,0.152,0.038,0.177-0.05c0.025-0.09,0.178-0.104,0.355-0.104c0.178,0,0.305,0.04,0.483,0.014c0.178-0.025,0.356-0.141,0.42-0.166c0.063-0.025,0.279-0.164,0.443-0.063c0.166,0.103,0.141,0.241,0.23,0.332c0.088,0.088,0.24,0.037,0.355-0.051c0.114-0.09,0.064-0.052,0.203,0.025c0.14,0.075,0.204,0.151,0.077,0.267c-0.128,0.113-0.051,0.293-0.128,0.47c-0.076,0.178-0.063,0.203,0.077,0.278c0.14,0.076,0.394,0.548,0.47,0.638c0.077,0.088-0.025,0.342,0.064,0.495c0.089,0.151,0.178,0.254,0.077,0.331c-0.103,0.075-0.28,0.216-0.292,0.47s0.051,0.431,0.102,0.521s0.177,0.331,0.241,0.419c0.064,0.089,0.14,0.305,0.152,0.445c0.013,0.14-0.024,0.306,0.039,0.381c0.064,0.076,0.102,0.191,0.216,0.292c0.115,0.103,0.152,0.318,0.152,0.318s0.039,0.089,0.051,0.229c0.012,0.14,0.025,0.228,0.152,0.292c0.126,0.063,0.215,0.076,0.28,0.013c0.063-0.063,0.381-0.077,0.546-0.063c0.165,0.013,0.355-0.075,0.521-0.19s0.407-0.419,0.496-0.508c0.089-0.09,0.292-0.255,0.268-0.356c-0.025-0.101-0.077-0.203,0.024-0.254c0.102-0.052,0.344-0.152,0.356-0.229c0.013-0.077-0.09-0.395-0.115-0.457c-0.024-0.064,0.064-0.18,0.165-0.306c0.103-0.128,0.421-0.216,0.471-0.267c0.051-0.053,0.191-0.267,0.217-0.433c0.024-0.167-0.051-0.369,0-0.457c0.05-0.09,0.013-0.165-0.103-0.268c-0.114-0.102-0.089-0.407-0.127-0.457c-0.037-0.051-0.013-0.319,0.063-0.345c0.076-0.023,0.242-0.279,0.344-0.393c0.102-0.114,0.394-0.47,0.534-0.496c0.139-0.025,0.355-0.229,0.368-0.343c0.013-0.115,0.38-0.547,0.394-0.635c0.013-0.09,0.166-0.42,0.102-0.497c-0.062-0.076-0.559,0.115-0.622,0.141c-0.064,0.025-0.241,0.127-0.446,0.113c-0.202-0.013-0.114-0.177-0.127-0.254c-0.012-0.076-0.228-0.368-0.279-0.381c-0.051-0.012-0.203-0.166-0.267-0.317c-0.063-0.153-0.152-0.343-0.254-0.458c-0.102-0.114-0.165-0.38-0.268-0.559c-0.101-0.178-0.189-0.407-0.279-0.572c-0.021-0.041-0.045-0.079-0.067-0.117c0.118-0.029,0.289-0.082,0.31-0.009c0.024,0.088,0.165,0.279,0.19,0.419s0.165,0.089,0.178,0.216c0.014,0.128,0.14,0.433,0.19,0.47c0.052,0.038,0.28,0.242,0.318,0.318c0.038,0.076,0.089,0.178,0.127,0.369c0.038,0.19,0.076,0.444,0.179,0.482c0.102,0.038,0.444-0.064,0.508-0.102s0.482-0.242,0.635-0.255c0.153-0.012,0.179-0.115,0.368-0.152c0.191-0.038,0.331-0.177,0.458-0.28c0.127-0.101,0.28-0.355,0.33-0.444c0.052-0.088,0.179-0.152,0.115-0.253c-0.063-0.103-0.331-0.254-0.433-0.268c-0.102-0.012-0.089-0.178-0.152-0.178s-0.051,0.088-0.178,0.153c-0.127,0.063-0.255,0.19-0.344,0.165s0.026-0.089-0.113-0.203s-0.192-0.14-0.192-0.228c0-0.089-0.278-0.255-0.304-0.382c-0.026-0.127,0.19-0.305,0.254-0.19c0.063,0.114,0.115,0.292,0.279,0.368c0.165,0.076,0.318,0.204,0.395,0.229c0.076,0.025,0.267-0.14,0.33-0.114c0.063,0.024,0.191,0.253,0.306,0.292c0.113,0.038,0.495,0.051,0.559,0.051s0.33,0.013,0.381-0.063c0.051-0.076,0.089-0.076,0.153-0.076c0.062,0,0.177,0.229,0.267,0.254c0.089,0.025,0.254,0.013,0.241,0.179c-0.012,0.164,0.076,0.305,0.165,0.317c0.09,0.012,0.293-0.191,0.293-0.191s0,0.318-0.012,0.433c-0.014,0.113,0.139,0.534,0.139,0.534s0.19,0.393,0.241,0.482s0.267,0.355,0.267,0.47c0,0.115,0.025,0.293,0.103,0.293c0.076,0,0.152-0.203,0.24-0.331c0.091-0.126,0.116-0.305,0.153-0.432c0.038-0.127,0.038-0.356,0.038-0.444c0-0.09,0.075-0.166,0.255-0.242c0.178-0.076,0.304-0.292,0.456-0.407c0.153-0.115,0.141-0.305,0.446-0.305c0.305,0,0.278,0,0.355-0.077c0.076-0.076,0.151-0.127,0.19,0.013c0.038,0.14,0.254,0.343,0.292,0.394c0.038,0.052,0.114,0.191,0.103,0.344c-0.013,0.152,0.012,0.33,0.075,0.33s0.191-0.216,0.191-0.216s0.279-0.189,0.267,0.013c-0.014,0.203,0.025,0.419,0.025,0.545c0,0.053,0.042,0.135,0.088,0.21c-0.005,0.059-0.004,0.119-0.009,0.178C27.388,17.153,27.387,17.327,27.436,17.39zM20.382,12.064c0.076,0.05,0.102,0.127,0.152,0.203c0.052,0.076,0.14,0.05,0.203,0.114c0.063,0.064-0.178,0.14-0.075,0.216c0.101,0.077,0.151,0.381,0.165,0.458c0.013,0.076-0.279,0.114-0.369,0.102c-0.089-0.013-0.354-0.102-0.445-0.127c-0.089-0.026-0.139-0.343-0.025-0.331c0.116,0.013,0.141-0.025,0.267-0.139c0.128-0.115-0.189-0.166-0.278-0.191c-0.089-0.025-0.268-0.305-0.331-0.394c-0.062-0.089-0.014-0.228,0.141-0.331c0.076-0.051,0.279,0.063,0.381,0c0.101-0.063,0.203-0.14,0.241-0.165c0.039-0.025,0.293,0.038,0.33,0.114c0.039,0.076,0.191,0.191,0.141,0.229c-0.052,0.038-0.281,0.076-0.356,0c-0.075-0.077-0.255,0.012-0.268,0.152C20.242,12.115,20.307,12.013,20.382,12.064zM16.875,12.28c-0.077-0.025,0.025-0.178,0.102-0.229c0.075-0.051,0.164-0.178,0.241-0.305c0.076-0.127,0.178-0.14,0.241-0.127c0.063,0.013,0.203,0.241,0.241,0.318c0.038,0.076,0.165-0.026,0.217-0.051c0.05-0.025,0.127-0.102,0.14-0.165s0.127-0.102,0.254-0.102s0.013,0.102-0.076,0.127c-0.09,0.025-0.038,0.077,0.113,0.127c0.153,0.051,0.293,0.191,0.459,0.279c0.165,0.089,0.19,0.267,0.088,0.292c-0.101,0.025-0.406,0.051-0.521,0.038c-0.114-0.013-0.254-0.127-0.419-0.153c-0.165-0.025-0.369-0.013-0.433,0.077s-0.292,0.05-0.395,0.05c-0.102,0-0.228,0.127-0.253,0.077C16.875,12.534,16.951,12.306,16.875,12.28zM17.307,9.458c0.063-0.178,0.419,0.038,0.355,0.127C17.599,9.675,17.264,9.579,17.307,9.458zM17.802,18.584c0.063,0.102-0.14,0.431-0.254,0.407c-0.113-0.027-0.076-0.318-0.038-0.382C17.548,18.545,17.769,18.529,17.802,18.584zM13.189,12.674c0.025-0.051-0.039-0.153-0.127-0.013C13.032,12.71,13.164,12.725,13.189,12.674zM20.813,8.035c0.141,0.076,0.339,0.107,0.433,0.013c0.076-0.076,0.013-0.204-0.05-0.216c-0.064-0.013-0.104-0.115,0.062-0.203c0.165-0.089,0.343-0.204,0.534-0.229c0.19-0.025,0.622-0.038,0.774,0c0.152,0.039,0.382-0.166,0.445-0.254s-0.203-0.152-0.279-0.051c-0.077,0.102-0.444,0.076-0.521,0.051c-0.076-0.025-0.686,0.102-0.812,0.102c-0.128,0-0.179,0.152-0.356,0.229c-0.179,0.076-0.42,0.191-0.509,0.229c-0.088,0.038-0.177,0.19-0.101,0.216C20.509,7.947,20.674,7.959,20.813,8.035zM14.142,12.674c0.064-0.089-0.051-0.217-0.114-0.217c-0.12,0-0.178,0.191-0.103,0.254C14.002,12.776,14.078,12.763,14.142,12.674zM14.714,13.017c0.064,0.025,0.114,0.102,0.165,0.114c0.052,0.013,0.217,0,0.167-0.127s-0.167-0.127-0.204-0.127c-0.038,0-0.203-0.038-0.267,0C14.528,12.905,14.65,12.992,14.714,13.017zM11.308,10.958c0.101,0.013,0.217-0.063,0.305-0.101c0.088-0.038,0.216-0.114,0.216-0.229c0-0.114-0.025-0.216-0.077-0.267c-0.051-0.051-0.14-0.064-0.216-0.051c-0.115,0.02-0.127,0.14-0.203,0.14c-0.076,0-0.165,0.025-0.14,0.114s0.077,0.152,0,0.19C11.117,10.793,11.205,10.946,11.308,10.958zM11.931,10.412c0.127,0.051,0.394,0.102,0.292,0.153c-0.102,0.051-0.28,0.19-0.305,0.267s0.216,0.153,0.216,0.153s-0.077,0.089-0.013,0.114c0.063,0.025,0.102-0.089,0.203-0.089c0.101,0,0.304,0.063,0.406,0.063c0.103,0,0.267-0.14,0.254-0.229c-0.013-0.089-0.14-0.229-0.254-0.28c-0.113-0.051-0.241-0.28-0.317-0.331c-0.076-0.051,0.076-0.178-0.013-0.267c-0.09-0.089-0.153-0.076-0.255-0.14c-0.102-0.063-0.191,0.013-0.254,0.089c-0.063,0.076-0.14-0.013-0.217,0.012c-0.102,0.035-0.063,0.166-0.012,0.229C11.714,10.221,11.804,10.361,11.931,10.412zM24.729,17.198c-0.083,0.037-0.153,0.47,0,0.521c0.152,0.052,0.241-0.202,0.191-0.267C24.868,17.39,24.843,17.147,24.729,17.198zM20.114,20.464c-0.159-0.045-0.177,0.166-0.304,0.306c-0.128,0.141-0.267,0.254-0.317,0.241c-0.052-0.013-0.331,0.089-0.242,0.279c0.089,0.191,0.076,0.382-0.013,0.472c-0.089,0.088,0.076,0.342,0.052,0.482c-0.026,0.139,0.037,0.229,0.215,0.229s0.242-0.064,0.318-0.229c0.076-0.166,0.088-0.331,0.164-0.47c0.077-0.141,0.141-0.434,0.179-0.51c0.038-0.075,0.114-0.316,0.102-0.457C20.254,20.669,20.204,20.489,20.114,20.464zM10.391,8.802c-0.069-0.06-0.229-0.102-0.306-0.11c-0.076-0.008-0.152,0.06-0.321,0.06c-0.168,0-0.279,0.067-0.347,0C9.349,8.684,9.068,8.65,9.042,8.692C9.008,8.749,8.941,8.751,9.008,8.87c0.069,0.118,0.12,0.186,0.179,0.178s0.262-0.017,0.288,0.051C9.5,9.167,9.569,9.226,9.712,9.184c0.145-0.042,0.263-0.068,0.296-0.119c0.033-0.051,0.263-0.059,0.263-0.059S10.458,8.861,10.391,8.802z"
        }));

        var pointSeries = map.series.push(am5map.MapPointSeries.new(root, {
            latitudeField: "geo_lat",
            longitudeField: "geo_long"
        }));

        function selectCountry(id) {
            var dataItem = polygonSeries.getDataItemById(id);
            var target = dataItem.get("mapPolygon");

            const selectedCountryMap = countries2[id].maps.find(itx => { return itx.toLowerCase().includes('high') });

            if (target) {
                var centroid = target.geoCentroid();
                if (centroid) {
                    map.animate({ key: "rotationX", to: -centroid.longitude, duration: 1500, easing: am5.ease.inOut(am5.ease.cubic) });
                    map.animate({ key: "rotationY", to: -centroid.latitude, duration: 1500, easing: am5.ease.inOut(am5.ease.cubic) });
                }

                setTimeout(() => {
                    // let zoomAnimation = polygonSeries.zoomToDataItem(dataItem);
                    const mapLoad = new Promise((resolve, reject) => {
                        resolve(am5.net.load("https://cdn.amcharts.com/lib/5/geodata/json/" + selectedCountryMap + ".json", map));
                    });

                    mapLoad.then((results) => {
                        // let geodata = am5.JSONParser.parse(results.response);
                        // countrySeries.setAll({
                        //     geoJSON: geodata,
                        //     fill: am5.color("#059669")
                        // });

                        map.zoomToGeoPoint({ latitude: centroid.latitude, longitude: centroid.longitude }, 2.5, true);
                        // countrySeries.show();
                        // polygonSeries.hide(100);
                        backContainer.show();

                        var countryData = stations.filter(itx => itx.countrycode === id);
                        if (countryData.length > 500) {
                            countryData = countryData.slice(0, 500);
                        }
                        station_finder_active = true;
                        pushPoints(root, map, pointSeries, countryData);
                    });
                }, 2000)
            }
        }

        map.events.on("pointerdown", function () {
            isDown = true;
        })
        map.events.on("globalpointermove", function (e) {
            // if pointer is down
            isMoving = false;
            if (isDown) {
                // get tooltip data item
                isMoving = true;
                setFindingStation(isDown);
            }
        })
        map.events.on("globalpointerup", (ev) => {
            isDown = false;
            setFindingStation(isDown);

            if (station_finder_active && bulletClicked === false) {
                isMoving = false;
                bulletClicked = false;
                setFindingStation(isDown);

                const val = document.getElementById("station-finder");
                const finder_bounds = val.getBoundingClientRect();

                const landed_cords = map.invert({ x: finder_bounds.x, y: finder_bounds.y });
                console.log('Location cords::', landed_cords);

                var closest = stations[0];
                console.log('Closest::', stations, closest);

                if (closest !== undefined) {
                    var shortestDistance = findShortestDist(landed_cords, stations[0]);
                    for (var i = 0; i < stations.length; i++) {
                        var d = findShortestDist(landed_cords, stations[i]);
                        if (d < shortestDistance) {
                            closest = stations[i];
                            shortestDistance = d;
                        }
                    }
                    console.log('test', closest);
                    map.zoomToGeoPoint({ latitude: closest.geo_lat, longitude: closest.geo_long }, map._downZoomLevel + 0.000000001, true);
                    playStation(closest);
                }
            }
        });
        // Make stuff animate on load
        map.appear(1000, 100);
    }

    const findShortestDist = (pt1, pt2) => {
        var diffX = pt1.latitude - pt2.geo_lat;
        var diffY = pt1.longitude - pt2.geo_long;
        return (diffX * diffX + diffY * diffY);
    }

    const pushPoints = (root, map, pointSeries, data) => {
        // Create point series
        pointSeries.bullets.push(function (event) {
            var circle = am5.Circle.new(root, {
                radius: 3,
                fill: am5.color("#e11d48"),
                tooltipText: "{name}",
                // strokeWidth: 0.25,
                // stroke: am5.color("#262626")
            });
            circle.interactionsEnabled = true;
            circle.events.on("click", function (ev) {
                console.log('Bullet clicked', ev);
                bulletClicked = true;
                const point_target = ev.target.dataItem.dataContext;
                const latitude = point_target.geo_lat;
                const longitude = point_target.geo_long;
                map.zoomToGeoPoint({ latitude, longitude }, 10, true);
                playStation(point_target);
            });
            return am5.Bullet.new(root, { sprite: circle });
        });
        pointSeries.data.setAll(data);
        // map.appear(1000, 100);

    }

    const playStation = (station) => {
        axios.get('https://nl1.api.radio-browser.info/json/stations/byuuid/' + station.stationuuid)
            .then(res => {
                setPlayerWaiting(true);
                const data = res.data[0];

                //Remove existing audio and add new audio to container
                if (audio_root.children.length > 0) {
                    audio_root.removeChild(audio_root.firstElementChild);
                }

                //Initialize audio player with station url
                var audio = document.createElement("audio");
                audio.src = data.url;
                audio.controls = true;
                audio.volume = 1;

                audio_root.appendChild(audio);
                audio.play().then(res => {
                    console.log("Audio res::", res);
                }).catch(err => {
                    console.log("Audio err::", err);
                });

                console.log("tst", audio_root)

                setPlayingStation({ active: true, data });

                audio.addEventListener('playing', () => {
                    console.log('Station is playing');
                    setPlayerWaiting(false);
                })
                audio.addEventListener('waiting', () => {
                    console.log('Station is waiting');
                });
                console.log("Station Player Data:: ", res.data[0])
            })
            .catch(err => console.log(err))
    }

    return (
        <div className='relative'>
            {!mapReady && <MainLoader />}
            <div id="chartdiv" className='w-full h-screen bg-neutral-800'></div>
            {playingStation.active ?
                <div className='absolute z-50 bottom-1 left-1 bg-amber-300 p-2 rounded-md'>
                    <p className='font-caviar font-bold text-gray-800 text-lg'>{playingStation.data.name}</p>
                    <div className='flex flex-row items-center gap-2'>
                        <MdSkipPrevious className='w-7 h-7 text-gray-800 cursor-pointer' />
                        {playerWaiting ?
                            <StationAudioWaiting fill="#000" stroke="#e11d48" className='w-8 h-8 text-gray-800 cursor-pointer' />
                            :
                            <IoStop className='w-6 h-6 text-gray-800 cursor-pointer' />
                        }
                        <MdSkipNext className='w-7 h-7 text-gray-800 cursor-pointer' />

                        {/* <input
                            type="range"
                            value={audio.volume * 100}
                            onChange={(event) => {
                                console.log('test', event.currentTarget.value / 100)
                                setVolume(event.currentTarget.value);
                                audio.volume = event.currentTarget.value / 100;
                            }}
                        /> */}

                    </div>
                </div>
                :
                <div className='absolute z-30 bottom-0 left-0 bg-neutral-800 p-2'>
                    <img src={SiteLogo} className='h-14 w-14' />
                </div>
            }
            {mapReady && <>
                {findingStation ?
                    <StationFinder id="station-finder" height={36} width={36} stroke="#fafafa" className="absolute z-20 inset-0 m-auto pointer-events-none select-none" />
                    :
                    <StationFound id="station-finder" stroke="#fafafa" className="absolute z-20 inset-0 m-auto pointer-events-none select-none" />
                }
            </>
            }
        </div >
    )
}

export default Home;